name: Build

env:
  MAVEN_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
  MAVEN_CLI_OPTS: "-B -ntp -fae -T 2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dmaven.install.skip=true -Dmaven.compiler.useIncrementalCompilation=false -DlastModGranularityMs=1000000"

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare_maven_build
      - name: Build
        run: mvn ${MAVEN_CLI_OPTS} test-compile
      - uses: ./.github/actions/upload_intermediate_artifacts

  test:
    runs-on: "ubuntu-latest"
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare_maven_build
      - uses: ./.github/actions/download_intermediate_artifacts
      - name: Run unit tests
        run: mvn ${MAVEN_CLI_OPTS} -DskipITs test
      - uses: ./.github/actions/upload_intermediate_artifacts
        with:
          artifact-name: unit-test-results
          source-path: ./target/surefire-reports/
      - uses: ./.github/actions/upload_intermediate_artifacts
        with:
          artifact-name: test-coverage
          source-path: ./target/*.exec

  integration-test:
    runs-on: "ubuntu-latest"
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare_maven_build
      - uses: ./.github/actions/download_intermediate_artifacts
      - name: Run integration tests
        run: mvn ${MAVEN_CLI_OPTS} -DskipUnitTests verify
      - uses: ./.github/actions/upload_intermediate_artifacts
        with:
          artifact-name: integration-test-results
          source-path: ./target/failsafe-reports/
      - uses: ./.github/actions/upload_intermediate_artifacts
        with:
          artifact-name: integration-test-coverage
          source-path: ./target/*.exec

  coverage-report:
    runs-on: "ubuntu-latest"
    needs: [ test, integration-test ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare_maven_build
      - uses: ./.github/actions/download_intermediate_artifacts
      - uses: ./.github/actions/download_intermediate_artifacts
        with:
          artifact-name: test-coverage
          destination-folder: ./target
      - uses: ./.github/actions/download_intermediate_artifacts
        with:
          artifact-name: integration-test-coverage
          destination-folder: ./target
      - name: Generate coverage report
        run: mvn ${MAVEN_CLI_OPTS} verify -Dmaven.main.skip=true -Dmaven.test.skip=true
      - uses: ./.github/actions/upload_intermediate_artifacts
        with:
          artifact-name: coverage-report
          source-path: ./target/site/jacoco-aggregate/

  publish-test-results:
    name: Publish test results
    if: ${{ github.event_name == 'pull_request' }}
    needs: [test, integration-test]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download_intermediate_artifacts
        with:
          artifact-name: unit-test-results
          destination-folder: ./target/surefire-reports
      - uses: ./.github/actions/download_intermediate_artifacts
        with:
          artifact-name: integration-test-results
          destination-folder: ./target/failsafe-reports
      - name: Publish JUnit results
        uses: EnricoMi/publish-unit-test-result-action@v2.20.0
        with:
          files: |
            target/surefire-reports/TEST-*.xml
            target/failsafe-reports/TEST-*.xml

  publish-coverage:
    name: Publish coverage summary
    if: ${{ github.event_name == 'pull_request' }}
    needs: coverage-report
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download_intermediate_artifacts
        with:
          artifact-name: coverage-report
          destination-folder: ./target/site/jacoco
      - name: Debug step - show output of target folder
        run: ls -lR target/site/
      - name: Generate coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: target/site/jacoco/jacoco.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: fals
          indicators: true
          output: both
          thresholds: '80 80'
      - name: Add coverage to job summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      - name: Comment coverage on PR
        uses: marocchino/sticky-pull-request-comment@v2.9.4
        with:
          recreate: true
          path: code-coverage-results.md

  quality-check:
    needs: coverage-report
    uses: ./.github/workflows/02-sonarcloud.yml
    permissions:
      contents: read
      pull-requests: write
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
